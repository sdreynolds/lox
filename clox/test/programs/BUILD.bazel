load("@bazel_skylib//rules:diff_test.bzl", "diff_test")

diff_test(
    name = "math_boolean_test_diff",
    file1 = ":math_boolean_test",
    file2 = "expected_math_boolean_test.output",
)

genrule(
    name = "math_boolean_test",
    srcs = ["math_boolean_test.lox"],
    outs = ["math_boolean_test.output"],
    cmd = "$(location //clox/src:main) $(location math_boolean_test.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "breakfast_test_diff",
    file1 = ":breakfast_test",
    file2 = "expected_breakfast_test.output",
)

genrule(
    name = "breakfast_test",
    srcs = ["breakfast_test.lox"],
    outs = ["breakfast_test.output"],
    cmd = "$(location //clox/src:main) $(location breakfast_test.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "lots_of_prints_test_diff",
    file1 = ":lots_of_prints_test",
    file2 = "expected_lots_of_prints_test.output",
)

genrule(
    name = "lots_of_prints_test",
    srcs = ["lots_of_prints_test.lox"],
    outs = ["lots_of_prints_test.output"],
    cmd = "$(location //clox/src:main) $(location lots_of_prints_test.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "inner_outer_local_test_diff",
    file1 = ":inner_outer_local_test",
    file2 = "expected_inner_outer_local_test.output",
)

genrule(
    name = "inner_outer_local_test",
    srcs = ["inner_outer_local_test.lox"],
    outs = ["inner_outer_local_test.output"],
    cmd = "$(location //clox/src:main) $(location inner_outer_local_test.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "first_condition_diff",
    file1 = ":first_condition",
    file2 = "expected_first_condition.output",
)

genrule(
    name = "first_condition",
    srcs = ["first_condition.lox"],
    outs = ["first_condition.output"],
    cmd = "$(location //clox/src:main) $(location first_condition.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "and_or_conditions_diff",
    file1 = ":and_or_conditions",
    file2 = "expected_and_or_conditions.output",
)

genrule(
    name = "and_or_conditions",
    srcs = ["and_or_conditions.lox"],
    outs = ["and_or_conditions.output"],
    cmd = "$(location //clox/src:main) $(location and_or_conditions.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "while_loop_diff",
    file1 = ":while_loop",
    file2 = "expected_while_loop.output",
)

genrule(
    name = "while_loop",
    srcs = ["while_loop.lox"],
    outs = ["while_loop.output"],
    cmd = "$(location //clox/src:main) $(location while_loop.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "for_loop_diff",
    file1 = ":for_loop",
    file2 = "expected_for_loop.output",
)

genrule(
    name = "for_loop",
    srcs = ["for_loop.lox"],
    outs = ["for_loop.output"],
    cmd = "$(location //clox/src:main) $(location for_loop.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "procedure_diff",
    file1 = ":procedure",
    file2 = "expected_procedure.output",
)

genrule(
    name = "procedure",
    srcs = ["procedure.lox"],
    outs = ["procedure.output"],
    cmd = "$(location //clox/src:main) $(location procedure.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "function_add_diff",
    file1 = ":function_add",
    file2 = "expected_function_add.output",
)

genrule(
    name = "function_add",
    srcs = ["function_add.lox"],
    outs = ["function_add.output"],
    cmd = "$(location //clox/src:main) $(location function_add.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)

diff_test(
    name = "fib_diff",
    file1 = ":fib",
    file2 = "expected_fib.output",
)

# With DEBUG_TRACE_EXECUTION set, this rule takes 31 seconds or so to build.
genrule(
    name = "fib",
    srcs = ["fib.lox"],
    outs = ["fib.output"],
    cmd = "$(location //clox/src:main) $(location fib.lox)> \"$@\"",
    tools = ["//clox/src:main"],
)
